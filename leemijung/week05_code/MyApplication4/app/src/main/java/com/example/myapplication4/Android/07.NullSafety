// NullSafety
//  -> Null에 대해 안전하다
//  -> 코틀린의 특징이다.

Null vs 0
-> 0 : 휴지를 다 쓰고 휴지심만 남은 상태
-> null : 휴지심도 없는 상태, 존재하지 않는 상태, 모르는 상태

Null 이 안전하지 않은 이유
-> 0+10=10
-> Null+10= ?   -- 에러
-> button.setOnClickListener
-> null.setOnClickListener   -- 에러
--> NullPointExceptionError 발생

if(number != null){
    number+=10
}
if(button != null){
    button.setOnClickListener
}
항상 이렇게 체크하는 것은 번거롭다.

코틀린이 Null Safety 하기 위해서 사용하는 문법
-> ?  : Null이 아니라면 이하 구문 실행
-> !!  : Null이 아님을 개발자가 보장한다
    *사용방법*
button?.setOnClickListener
=  ? 앞에 있는것이 null이 아니라면 뒤에 있는 것을 실행하겠다
button!!.setOnClickListener
=  !! 앞에 있는것은 확실히 null이 아니다   (사용 안하는 것이 좋다)


Null이 될 수 있는 타입
Int, Double, Float, Class -> Null 이 될 수 없는 타입
Int?, Double?, Float?, Class? -> Null 이 될 수 있는 타입